<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.1//EN" "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
	<!-- 指定由spring负责action对象的创建 -->
	<constant name="struts.objectFactory" value="spring"></constant>
	<!-- 所有匹配*.action的请求都由struts2处理 -->
	<constant name="struts.action.extension" value="action" />
	<!-- 是否启用开发模式 -->
	<constant name="struts.devMode" value="true" />
	<!-- struts配置文件改动后，是否重新加载 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 设置浏览器是否缓存静态内容 -->
	<constant name="struts.serve.static.browserCache" value="false" />
	<!-- 请求参数的编码方式 -->
	<constant name="struts.i18n.encoding" value="utf-8" />
	<!-- 每次HTTP请求系统都重新加载资源文件，有助于开发 -->
	<constant name="struts.i18n.reload" value="true" />
	<!-- 文件上传最大值 -->
	<constant name="struts.multipart.maxSize" value="104857600" />
	<!-- 让struts2支持动态方法调用 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!-- Action名称中是否还是用斜线 -->
	<constant name="struts.enable.SlashesInActionNames" value="false" />
	<!-- 允许标签中使用表达式语法 -->
	<constant name="struts.tag.altSyntax" value="true" />



	<package name="base" extends="struts-default">
		<interceptors>
			<interceptor name="loginInterceptor" class="loginInterceptor"></interceptor>
			<interceptor name="systemInterceptor" class="systemInterceptor"></interceptor>
			<interceptor-stack name="loginstack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
				<interceptor-ref name="loginInterceptor"></interceptor-ref>
			</interceptor-stack>
			<interceptor-stack name="systemstack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
				<interceptor-ref name="systemInterceptor"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
	</package>

	<!-- 登陆管理模块 -->
	<package name="loginAction" extends="base" namespace="/loginAction">
		<action name="*" class="loginAction" method="{1}">
			<interceptor-ref name="loginstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
			<result name="success">/main.jsp</result>
		</action>
	</package>


	<!-- 医药管理模块 -->
	<package name="medicineAction" extends="base" namespace="/medicineAction">
		<action name="*" class="medicineAction" method="{1}">
			<interceptor-ref name="loginstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
		</action>
	</package>

	<!-- 类别管理模块 -->
	<package name="categoryAction" extends="base" namespace="/categoryAction">
		<action name="*" class="categoryAction" method="{1}">
			<interceptor-ref name="loginstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
		</action>
	</package>

	<!-- 购买销售管理模块 -->
	<package name="sellDetailAction" extends="base" namespace="/sellDetailAction">
		<action name="*" class="sellDetailAction" method="{1}">
			<interceptor-ref name="loginstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
		</action>
	</package>

	<!-- 进货需求模块 -->
	<package name="requireAction" extends="base" namespace="/requireAction">
		<action name="*" class="requireAction" method="{1}">
			<interceptor-ref name="loginstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
		</action>
	</package>

	<!-- 系统模块 -->
	<package name="systemAction" extends="base" namespace="/systemAction">
		<action name="*" class="systemAction" method="{1}">
			<interceptor-ref name="systemstack"></interceptor-ref>
			<result name="result">/${path}.jsp</result>
			<result name="out">/index.jsp</result>
		</action>
	</package>
</struts>    
